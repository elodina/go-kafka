// Code generated by protoc-gen-go.
// source: logline.proto
// DO NOT EDIT!

/*
Package syslog_proto is a generated protocol buffer package.

It is generated from these files:
	logline.proto

It has these top-level messages:
	LogLine
*/
package syslog_proto

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type LogLine struct {
	Line             *string        `protobuf:"bytes,1,req,name=line" json:"line,omitempty"`
	Source           *string        `protobuf:"bytes,2,opt,name=source,def=" json:"source,omitempty"`
	Tag              []*LogLine_Tag `protobuf:"bytes,3,rep,name=tag" json:"tag,omitempty"`
	Logtypeid        *int64         `protobuf:"varint,4,opt,name=logtypeid,def=0" json:"logtypeid,omitempty"`
	Timings          []int64        `protobuf:"varint,5,rep,name=timings" json:"timings,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *LogLine) Reset()         { *m = LogLine{} }
func (m *LogLine) String() string { return proto.CompactTextString(m) }
func (*LogLine) ProtoMessage()    {}

const Default_LogLine_Logtypeid int64 = 0

func (m *LogLine) GetLine() string {
	if m != nil && m.Line != nil {
		return *m.Line
	}
	return ""
}

func (m *LogLine) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *LogLine) GetTag() []*LogLine_Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *LogLine) GetLogtypeid() int64 {
	if m != nil && m.Logtypeid != nil {
		return *m.Logtypeid
	}
	return Default_LogLine_Logtypeid
}

func (m *LogLine) GetTimings() []int64 {
	if m != nil {
		return m.Timings
	}
	return nil
}

type LogLine_Tag struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogLine_Tag) Reset()         { *m = LogLine_Tag{} }
func (m *LogLine_Tag) String() string { return proto.CompactTextString(m) }
func (*LogLine_Tag) ProtoMessage()    {}

func (m *LogLine_Tag) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *LogLine_Tag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
}
